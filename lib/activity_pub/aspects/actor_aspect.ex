# MoodleNet: Connecting and empowering educators worldwide
# Copyright Â© 2018-2019 Moodle Pty Ltd <https://moodle.com/moodlenet/>
# Contains code from Pleroma <https://pleroma.social/> and CommonsPub <https://commonspub.org/>
# SPDX-License-Identifier: AGPL-3.0-only

defmodule ActivityPub.ActorAspect do
  @moduledoc """
  `ActorAspect` implements [_Actor_ as defined in the ActivityPub specifications](https://www.w3.org/TR/activitypub/#actors). There are different _Actor_ types: _Application, Group, Person_, etc. but all of them can have common properties: _preferred_username, inbox, outbox, followers_, etc.

  An `ActivityPub.Aspect` is a group of fields and functionality that an `ActivityPub.Entity` can have. `Aspects` are similar to [ActivityStreams core types](https://www.w3.org/TR/activitystreams-vocabulary/#types), but not exactly the same.

  The `ActivityPub.Aspect` is responsible for an `ActivityPub.Entity`'s fields and associations. An `ActivityPub.Entity` can implement one or more `Aspects` at the same time.

  A _Person_ for example, in addition of the `ActivityPub.ActorAspect`, also has the `ActivityPub.ObjectAspect` which contains all the fields that any _Object_ can have: _id, type, attachment, audience, bcc, bto_, etc.
  """

  use ActivityPub.Aspect, persistence: ActivityPub.SQLActorAspect

  aspect do
    assoc(:inbox, type: "Collection", functional: true, autogenerated: true)
    assoc(:outbox, type: "Collection", functional: true, autogenerated: true)
    assoc(:following, type: "Collection", functional: true, autogenerated: true)
    assoc(:followers, type: "Collection", functional: true, autogenerated: true)
    assoc(:liked, type: "Collection", functional: true, autogenerated: true)
    field(:keys, :string)
    field(:preferred_username, :string)
    field(:streams, {:map, :string})
    field(:endpoints, {:map, :string})
  end

  def autogenerate(:inbox, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:outbox, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:following, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:followers, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end

  def autogenerate(:liked, _entity) do
    ActivityPub.new(%{
      type: "Collection"
    })
  end
end
