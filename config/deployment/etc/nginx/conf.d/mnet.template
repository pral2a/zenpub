upstream backend {
    server 127.0.0.1:${PORT};
}


server {
    listen 80 default_server;
    server_name ${HOSTNAME};

    location /uploads {
        root /var/www;
    }

    location / {

        set ${DOLLAR}proxy_frontend_url "${PROXY_FRONTEND_URL}";
        error_page 418 = @proxy_to_frontend;
        recursive_error_pages on;

        # if you want the webserver in this container to proxy frontend requests to an external URL
        if (${DOLLAR}proxy_frontend_url) {
            return 418;
        }

        # else, serve the frontend from local files
        index index.html;
        root /var/www;

        try_files ${DOLLAR}uri /index.html;
    }

    location @proxy_to_frontend {
        proxy_pass ${PROXY_FRONTEND_URL};
        proxy_set_header Host ${FRONTEND_HOSTNAME};
        proxy_read_timeout 1m; 
        proxy_set_header  X-Forwarded-For   ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto ${DOLLAR}scheme;
        proxy_ssl_verify off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_ssl_protocols TLSv1.2;
        proxy_ssl_server_name on;
        proxy_ssl_name ${FRONTEND_HOSTNAME};
    }

    # proxy backend paths to the BEAM app

    location /api {
        proxy_pass http://backend;
        proxy_http_version 1.1;
    }

    location /pub {
        proxy_pass http://backend;
        proxy_http_version 1.1;
    }

    location /oauth {
        proxy_pass http://backend;
        proxy_http_version 1.1;
    }

    location /.well-known {
        proxy_pass http://backend;
        proxy_http_version 1.1;
    }

    location /devops/respawn/${MAIL_KEY} { 
        # webhook used to trigger shutdown of container and respawn of k8s pod
        content_by_lua_block {
            os.execute("/utils/shutdown-instance.sh")
        } 
    }

}
